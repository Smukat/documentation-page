{"version":3,"sources":["components/Context/indexContext.jsx","components/SkipMain.jsx","components/NavbarItem.jsx","components/CustomNavbar.jsx","components/Header.jsx","components/ListItem.jsx","components/Subcategory.jsx","components/SideMenu.jsx","components/Parameters.jsx","components/Article.jsx","components/MainHeader.jsx","components/Main.jsx","components/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DocumentationPageContext","React","createContext","Provider","Consumer","SkipMain","react_default","a","createElement","className","href","NavbarItem","_ref","index","_ref2","categoriesName","actions","reactstrap_es","onClick","updateActiveCategory","id","category","CustomNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","prevState","title","color","light","expand","navbar","map","components_NavbarItem","key","Component","Header","components_SkipMain","CustomNavbar_CustomNavbar","defaultProps","ListItem","tag","action","Subcategory","name","articleId","categoryId","SideMenu","list_categories","categories","components_ListItem","articles","article","components_Subcategory","Parameters","explanation","example","esm","language","Article","description","syntax","parameters","values","parameter","components_Parameters","return","outline","link","target","rel","MainHeader","section","Main","components_Article","components_MainHeader","Footer","App","data","active_category_id","active_article_id","object","reduce","accumulator","currentValue","concat","category_id","article_id","_this$state","sectionTitle","getAllArticles","filter","value","components_Header","components_SideMenu","components_Main","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24547238.chunk.js","sourcesContent":["import React from 'react';\n\nconst DocumentationPageContext = React.createContext();\n\nexport const Provider = DocumentationPageContext.Provider;\nexport const Consumer = DocumentationPageContext.Consumer;\n","import React from 'react';\n\nconst SkipMain = () => (\n\t<a className=\"skip-link screen-reader-text\" href=\"#content\">Skip to content</a>\n);\n\nexport default SkipMain;\n","import React from 'react';\nimport { NavItem, NavLink } from 'reactstrap';\nimport { Consumer } from './Context/indexContext.jsx'\n\nconst NavbarItem = ({ index }) => (\n  <Consumer>\n\t\t{({categoriesName, actions}) => (\n\t\t\t<NavItem>\n\t\t\t\t<NavLink href=\"#\" onClick={() => { actions.updateActiveCategory(categoriesName[index].id, -1); }}>{categoriesName[index].category}</NavLink>\n\t\t\t</NavItem>\n\t\t)}\n  </Consumer>\n);\n\nexport default NavbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Collapse, Navbar, NavbarToggler, NavbarBrand, Nav,\n} from 'reactstrap';\nimport { Consumer } from './Context/indexContext.jsx';\nimport NavbarItem from './NavbarItem.jsx';\n\nexport default class CustomNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }));\n  }\n\n  render() {\n    // Destructuring:\n    const { title} = this.props;\n    const { isOpen } = this.state;\n\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"https://smukat.github.io/documentation-page/\">{title}</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <Consumer>\n                { ({ categoriesName }) => (\n                  categoriesName.map((category, index) => (\n                    <NavbarItem key={category.id} index={index} />\n                  ))\n                )}\n              </Consumer>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\nCustomNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SkipMain from './SkipMain.jsx';\nimport CustomNavbar from './CustomNavbar.jsx';\n\nconst Header = ({ title }) => (\n\n  <div>\n    <SkipMain />\n    <CustomNavbar title={title} />\n  </div>);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  title: 'JS Documentation',\n};\n\nexport default Header;\n","import React from 'react';\r\nimport { Consumer} from './Context/indexContext.jsx';\r\nimport { ListGroupItem } from 'reactstrap';\r\n\r\nconst ListItem = ({ index }) => (\r\n  <Consumer>\r\n    {({categoriesName, actions}) => (\r\n      <ListGroupItem className=\"sideMenu-category\" tag=\"a\" href=\"#\" action onClick={() => { actions.updateActiveCategory(categoriesName[index].id, -1)}}>{categoriesName[index].category}</ListGroupItem>\r\n    )}\r\n  </Consumer>\r\n  \r\n);\r\n\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListGroupItem } from 'reactstrap';\r\nimport { Consumer } from './Context/indexContext.jsx';\r\n\r\nconst Subcategory = ({ name, articleId, categoryId }) => (\r\n  <Consumer>\r\n    {({actions}) => (\r\n      <ListGroupItem tag=\"a\" href=\"#\" action onClick={() => {actions.updateActiveCategory(categoryId, articleId)}}>{name}</ListGroupItem>\r\n    )}\r\n  </Consumer>\r\n  \r\n);\r\n\r\nSubcategory.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  articleId: PropTypes.number,\r\n  categoryId: PropTypes.number,\r\n};\r\n\r\nexport default Subcategory;","import React from 'react';\r\nimport { ListGroup } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from './ListItem.jsx';\r\nimport Subcategory from './Subcategory';\r\n\r\n\r\nconst SideMenu = ({ categories }) => {\r\n  \r\n  // Create a <ListItem> component for each {category}\r\n  const list_categories = categories.map((category, index) => (\r\n      <div key={category.id}>\r\n        <ListItem index={index} />\r\n\r\n        {category.articles.map((article, index) => (\r\n          <Subcategory name={article.title} key={article.id} categoryId={category.id} articleId={article.id} index={index} />\r\n        ))}\r\n      </div>\r\n  ));\r\n\r\n  return (\r\n    <aside className=\"sideMenu\">\r\n      <ListGroup>{list_categories}</ListGroup>\r\n    </aside>\r\n  );\r\n};\r\n\r\nSideMenu.propTypes = {\r\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\nexport default SideMenu;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst Parameters = ({ name, explanation, example }) => (\n    <div>\n      <h4 className=\"article-parameters\">{name}</h4>\n      <p>{explanation}</p>\n      <pre>\n        <SyntaxHighlighter language=\"javascript\">{example}</SyntaxHighlighter>\n      </pre>\n    </div>);\n\nParameters.propTypes = {\n  name: PropTypes.string,\n  explanation: PropTypes.string,\n  example: PropTypes.string,\n};\nexport default Parameters;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { Button } from 'reactstrap';\r\nimport Parameters from './Parameters';\r\n\r\nconst Article = ({\r\n  title, description, example, syntax,\r\n}) => {\r\n  const parameters = Object.values(syntax.parameters).map(parameter => (\r\n    <Parameters\r\n      key={parameter.id}\r\n      name={parameter.name}\r\n      explanation={parameter.explanation}\r\n      example={parameter.example}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <article className=\"article\">\r\n      <h2 className=\"article-title\">{title}</h2>\r\n      <p>{description}</p>\r\n      <pre>\r\n        <SyntaxHighlighter language=\"javascript\">{example}</SyntaxHighlighter>\r\n      </pre>\r\n      <div>\r\n        <h3 className=\"article-subtitle\">Parameters:</h3>\r\n        {parameters}\r\n        <h3 className=\"article-subtitle\">Return Value:</h3>\r\n        <p>{syntax.return}</p>\r\n        <Button outline color=\"link\"><a className=\"learnMore-button\" href={syntax.link} target=\"_blank\" rel=\"noopener noreferrer\">Learn More</a></Button>{' '}\r\n\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  example: PropTypes.string.isRequired,\r\n\r\n};\r\nexport default Article;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MainHeader = ({ section }) => (\r\n  <div className=\"mainHeader-style\">\r\n    <h2 className=\"mainHeader\">{section}</h2>\r\n  </div>\r\n);\r\n\r\nMainHeader.propTypes = {\r\n  section: PropTypes.string.isRequired,\r\n};\r\nexport default MainHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Article from './Article';\r\nimport MainHeader from './MainHeader';\r\n// import { github } from 'react-syntax-highlighter/styles/hljs';\r\n\r\nconst Main = ({ articles, section }) => {\r\n  const article = Object.values(articles).map(article => (\r\n  <Article\r\n\t\ttitle={article.title}\r\n\t\tkey={article.id}\r\n\t\tdescription={article.description}\r\n\t\texample={article.example}\r\n\t\tsyntax={article.syntax}\r\n\t\t/>\r\n  ));\r\n\r\n  return (\r\n\t\t<main id=\"content\">\r\n\t\t\t<MainHeader section={section} />\r\n\t\t\t{article}\r\n\t\t</main>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  section: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <a href=\"https://github.com/Smukat\" target=\"_blank\" rel=\"noopener noreferrer\">&copy; Jesica Prades 2018</a>\r\n  </footer>\r\n\r\n);\r\nexport default Footer;\r\n","// Import Section\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport data from './data/data.json';\nimport { Provider } from './components/Context/indexContext.jsx';\nimport Header from './components/Header';\nimport SideMenu from './components/SideMenu';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // {data} is the json object that will give all the information to the app.\n    // {active_category_id} will identify the section the user is visiting based on the key of the {data} given.\n    // Objects in the json file start at \"1\". -1 in active category means there is no active category.\n    this.state = {\n      data,\n      active_category_id: -1,\n      active_article_id: -1,\n    };\n    this.updateActiveCategory = this.updateActiveCategory.bind(this);\n  }\n  // It returns an array of all the articles found in {data} json.\n\n  getAllArticles() {\n    const articles = Object.values(this.state.data).map(object => (\n      object.articles\n    ));\n    return articles.reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n  }\n\n  // Using the SideMenu or the Navbar buttons, update the {active_category_id}\n\n  updateActiveCategory(category_id, article_id) {\n    this.setState({\n      active_category_id: category_id,\n      active_article_id: article_id,\n    });\n  }\n\n  render() {\n\n    // Destructuring\n    const { data, active_category_id, active_article_id } = this.state;\n\n    // Create an array of the {categories} thay will show in the <Navbar> and the <Sidemenu>.\n    const categoriesName = Object.values(data).map(object => (\n      { id: object.id, category: object.category, articles: object.articles}));\n\n    // Based on the category that has been selected in the menus, render a {sectionTitle} in <MainHeader>.\n    const sectionTitle = (active_category_id > 0) ? data[active_category_id].category : \"Articles\";\n\n    // Create an array of {articles} to show in the main component based on the active state of the category..\n    const articles = (active_category_id === -1) ? this.getAllArticles() :\n      (active_article_id === -1) ? data[active_category_id].articles : data[active_category_id].articles.filter(article => article.id === active_article_id);\n\n    return (\n      <Provider value={{\n        categoriesName: categoriesName,\n        actions: {\n          updateActiveCategory: this.updateActiveCategory,\n        } \n      }}>\n        <div>\n          <Header />\n          <div className=\"main-wrapper\">\n            <SideMenu categories={categoriesName} />\n            <Main articles={articles} section={sectionTitle} />\n            <Footer />\n          </div>\n        </div>\n      </Provider> \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}