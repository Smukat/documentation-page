{"version":3,"sources":["components/SkipMain.js","components/NavbarItem.jsx","components/CustomNavbar.jsx","components/Header.jsx","components/ListItem.jsx","components/Subcategory.jsx","components/Parameters.jsx","components/Article.jsx","components/SideMenu.jsx","components/MainHeader.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SkipMain","react_default","a","createElement","className","href","NavbarItem","_ref","category","reactstrap_es","CustomNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","prevState","_this$props","title","categories","map","components_NavbarItem","key","id","color","light","expand","React","Component","Header","components_SkipMain","CustomNavbar_CustomNavbar","defaultProps","ListItem","onClick","tag","action","Subcategory","name","category_id","Parameters","explanation","example","esm","language","Article","description","syntax","parameters","values","parameter","components_Parameters","return","outline","link","target","rel","SideMenu","onChange","console","log","list_categories","components_ListItem","articles","article","components_Subcategory","MainHeader","section","Main","components_Article","components_MainHeader","App","data","active_category_id","active_article_id","updateActiveCategory","object","reduce","accumulator","currentValue","concat","article_id","_this$state","categoriesName","sectionTitle","getAllArticles","filter","components_Header","components_SideMenu","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78240df3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SkipMain = () => {\r\n    return (\r\n        <a className=\"skip-link screen-reader-text\" href=\"#content\">Skip to content</a>\r\n    );\r\n}\r\n\r\nexport default SkipMain;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\n\r\nconst NavbarItem = ({ category }) => (\r\n  <NavItem>\r\n    <NavLink href=\"#\">{category}</NavLink>\r\n  </NavItem>\r\n);\r\n\r\nNavbarItem.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\nexport default NavbarItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Collapse, Navbar, NavbarToggler, NavbarBrand, Nav,\r\n} from 'reactstrap';\r\nimport NavbarItem from './NavbarItem.jsx';\r\n\r\nexport default class CustomNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      isOpen: !prevState.isOpen,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    // Destructuring:\r\n    const { title, categories } = this.props;\r\n    const { isOpen } = this.state;\r\n\r\n    // Create a navbar-item per each category that exists.\r\n    const navbarItems = categories.map(category => (\r\n      <NavbarItem category={category.category} key={category.id} />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">{title}</NavbarBrand>\r\n          {/* <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {navbarItems}\r\n            </Nav>\r\n          </Collapse> */}\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCustomNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SkipMain from './SkipMain';\r\nimport CustomNavbar from './CustomNavbar.jsx';\r\n\r\nconst Header = ({ title, categories }) => (\r\n  <div>\r\n    <SkipMain />\r\n    <CustomNavbar title={title} categories={categories} />\r\n  </div>);\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'JS Documentation',\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ListGroupItem,\r\n} from 'reactstrap';\r\n\r\nconst ListItem = ({ category, id, onClick }) => (\r\n  <ListGroupItem className=\"sideMenu-category\" tag=\"a\" href=\"#\" action onClick={() => { onClick(id, -1)}}>{category}</ListGroupItem>\r\n);\r\n\r\nListItem.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListGroupItem,\n} from 'reactstrap';\n\nconst Subcategory = ({ name, id, category_id, onClick }) => (\n  <ListGroupItem tag=\"a\" href=\"#\" action onClick={() => {onClick(category_id, id)}}>{name}</ListGroupItem>\n);\n\nSubcategory.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Subcategory;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst Parameters = ({ name, explanation, example }) => (\n    <div>\n      <h4 className=\"article-parameters\">{name}</h4>\n      <p>{explanation}</p>\n      <pre>\n        <SyntaxHighlighter language=\"javascript\">{example}</SyntaxHighlighter>\n      </pre>\n    </div>);\n\nParameters.propTypes = {\n  name: PropTypes.string,\n  explanation: PropTypes.string,\n  example: PropTypes.string,\n};\nexport default Parameters;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { Button } from 'reactstrap';\r\nimport Parameters from './Parameters.jsx';\r\n\r\nconst Article = ({ title, description, example, syntax}) => {\r\n  const parameters = Object.values(syntax.parameters).map(parameter => (\r\n    <Parameters\r\n      key={parameter.id}\r\n      name={parameter.name}\r\n      explanation={parameter.explanation}\r\n      example={parameter.example}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <article className=\"article\">\r\n      <h2 className=\"article-title\">{title}</h2>\r\n      <p>{description}</p>\r\n      <pre>\r\n        <SyntaxHighlighter language=\"javascript\">{example}</SyntaxHighlighter>\r\n      </pre>\r\n      <div>\r\n        <h3 className=\"article-subtitle\">Parameters:</h3>\r\n        {parameters}\r\n        <h3 className=\"article-subtitle\">Return Value:</h3>\r\n        <p>{syntax.return}</p>\r\n        <Button outline color=\"link\"><a className=\"learnMore-button\" href={syntax.link} target=\"_blank\" rel=\"noopener noreferrer\">Learn More</a></Button>{' '}\r\n\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  example: PropTypes.string,\r\n  syntax: PropTypes.object.isRequired,\r\n\r\n};\r\nexport default Article;\r\n","import React from 'react';\nimport { ListGroup } from 'reactstrap';\nimport ListItem from './ListItem.jsx';\nimport Subcategory from './Subcategory';\nimport Article from './Article.jsx';\n\nconst SideMenu = ({ categories, onChange }) => {\n  console.log(categories);\n\n  //Create a <ListItem> component for each {category}\n  const list_categories = categories.map((category) => {\n    return (\n      <div key={category.id}>\n        <ListItem\n          category={category.category}\n          id={category.id}\n          onClick={onChange}\n        />\n        {category.articles.map(article => (\n          <Subcategory name={article.title} key={article.id} category_id={category.id} id={article.id} onClick={onChange} />\n        ))}\n      </div>\n  );\n});\n\n  return (\n    <aside>\n      <ListGroup>{list_categories}</ListGroup>\n    </aside>\n  );\n};\n\nexport default SideMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MainHeader = ({ section }) => (\n  <div className=\"mainHeader-style\">\n    <h2 className=\"mainHeader\">{section}</h2>\n  </div>\n);\n\nMainHeader.propTypes = {\n  section: PropTypes.string.isRequired,\n};\nexport default MainHeader;\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport PropTypes from 'prop-types';\nimport Article from './Article';\nimport MainHeader from './MainHeader';\n// import { github } from 'react-syntax-highlighter/styles/hljs';\n\nconst Main = ({ articles, section }) => {\n\tconsole.log(articles[0].id);\n\tconst article = Object.values(articles).map(article => (\n\t\t<Article\n\t\t\ttitle={article.title}\n\t\t\tkey={article.id}\n\t\t\tdescription={article.description}\n\t\t\texample={article.example}\n\t\t\tsyntax={article.syntax} />\n\t));\n\n\n\treturn (\n\t\t<main id=\"content\">\n\t\t\t<MainHeader section={section}/>\n\t\t\t{article}\n\t\t</main>\n\t);\n\n};\n\nMain.propTypes = {\n\tarticles: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tsection: PropTypes.string.isRequired,\n};\n\nexport default Main;\n","// Import Section\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport data from './data/data.json';\nimport Header from './components/Header';\nimport SideMenu from './components/SideMenu';\nimport Main from './components/Main';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // {data} is the json object that will give all the information to the app.\n    // {active_category_id} will identify the section the user is visiting based on the key of the {data} given.\n    // Objects in the json file start at \"1\". -1 in active category means there is no active category.\n    this.state = {\n      data,\n      active_category_id: -1,\n      active_article_id: -1\n    };\n    this.updateActiveCategory = this.updateActiveCategory.bind(this);\n  }\n  // It returns an array of all the articles found in {data} json.\n  getAllArticles() {\n    const articles = Object.values(this.state.data).map(object => (\n      object.articles\n    ));\n    return articles.reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n  }\n  //Using the SideMenu or the Navbar buttons, update the {active_category_id}\n  updateActiveCategory(category_id, article_id) {\n    this.setState({\n      active_category_id: category_id,\n      active_article_id: article_id\n    });\n  }\n\n  render() {\n    // Destructuring\n    const { data, active_category_id, active_article_id } = this.state;\n\n    // Create an array of the {categories} thay will show in the <Navbar> and the <Sidemenu>.\n    const categoriesName = Object.values(data).map(object => (\n      { id: object.id, category: object.category, articles: object.articles}));\n\n    // Based on the category that has been selected in the menus, render a {sectionTitle} in <MainHeader>.\n    const sectionTitle = (active_category_id > 0) ? data[active_category_id].category : \"Articles\";\n\n    // Create an array of {articles} to show in the main component based on the active state of the category..\n    const articles = (active_category_id === -1) ? this.getAllArticles() :\n      (active_article_id === -1) ? data[active_category_id].articles : data[active_category_id].articles.filter(article => article.id === active_article_id);\n\n    return (\n      <div>\n        <Header categories={categoriesName} />\n        <div className=\"main-wrapper\">\n          <SideMenu categories={categoriesName} onChange={this.updateActiveCategory} />\n          <Main articles={articles} section={sectionTitle} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}