{"version":3,"sources":["components/SkipMain.js","components/NavbarItem.jsx","components/CustomNavbar.jsx","components/Header.jsx","components/ListItem.jsx","components/Subcategory.jsx","components/SideMenu.jsx","components/Parameters.jsx","components/Article.jsx","components/MainHeader.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SkipMain","react_default","a","createElement","className","href","NavbarItem","_ref","category","onChange","id","reactstrap_es","onClick","CustomNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","prevState","_this$props","title","categories","navbarItems","map","components_NavbarItem","key","color","light","expand","navbar","React","Component","Header","components_SkipMain","CustomNavbar_CustomNavbar","defaultProps","ListItem","tag","action","Subcategory","name","category_id","SideMenu","list_categories","components_ListItem","articles","article","components_Subcategory","Parameters","explanation","example","esm","language","Article","description","syntax","parameters","values","parameter","components_Parameters","return","outline","link","target","rel","MainHeader","section","Main","components_Article","components_MainHeader","App","data","active_category_id","active_article_id","updateActiveCategory","object","reduce","accumulator","currentValue","concat","article_id","_this$state","categoriesName","sectionTitle","getAllArticles","filter","components_Header","components_SideMenu","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d41a54e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SkipMain = () => {\r\n    return (\r\n        <a className=\"skip-link screen-reader-text\" href=\"#content\">Skip to content</a>\r\n    );\r\n}\r\n\r\nexport default SkipMain;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavItem, NavLink } from 'reactstrap';\n\nconst NavbarItem = ({ category, onChange, id }) => (\n  <NavItem>\n    <NavLink href=\"#\" onClick={() => { onChange(id, -1); }}>{category}</NavLink>\n  </NavItem>\n);\n\nNavbarItem.propTypes = {\n  category: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default NavbarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Collapse, Navbar, NavbarToggler, NavbarBrand, Nav,\n} from 'reactstrap';\nimport NavbarItem from './NavbarItem.jsx';\n\nexport default class CustomNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }));\n  }\n\n  render() {\n\n    // Destructuring:\n    const { title, categories, onChange } = this.props;\n    const { isOpen } = this.state;\n\n    // Create a navbar-item per each category that exists.\n    const navbarItems = categories.map(category => (\n      <NavbarItem category={category.category} key={category.id} onChange={onChange} id={category.id} />\n    ));\n\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">{title}</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {navbarItems}\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\nCustomNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SkipMain from './SkipMain';\nimport CustomNavbar from './CustomNavbar.jsx';\n\nconst Header = ({ title, categories, onChange }) => (\n\n  <div>\n    <SkipMain />\n    <CustomNavbar title={title} categories={categories} onChange={onChange} />\n  </div>);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nHeader.defaultProps = {\n  title: 'JS Documentation',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListGroupItem,\n} from 'reactstrap';\n\nconst ListItem = ({ category, id, onClick }) => (\n  <ListGroupItem className=\"sideMenu-category\" tag=\"a\" href=\"#\" action onClick={() => { onClick(id, -1)}}>{category}</ListGroupItem>\n);\n\nListItem.propTypes = {\n  category: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListGroupItem,\n} from 'reactstrap';\n\nconst Subcategory = ({ name, id, category_id, onClick }) => (\n  <ListGroupItem tag=\"a\" href=\"#\" action onClick={() => {onClick(category_id, id)}}>{name}</ListGroupItem>\n);\n\nSubcategory.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default Subcategory;","import React from 'react';\nimport { ListGroup } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem.jsx';\nimport Subcategory from './Subcategory';\n\nconst SideMenu = ({ categories, onChange }) => {\n\n  // Create a <ListItem> component for each {category}\n  const list_categories = categories.map(category => (\n      <div key={category.id}>\n        <ListItem\n          category={category.category}\n          id={category.id}\n          onClick={onChange}\n        />\n        {category.articles.map(article => (\n          <Subcategory name={article.title} key={article.id} category_id={category.id} id={article.id} onClick={onChange} />\n        ))}\n      </div>\n  ));\n\n  return (\n    <aside className=\"sideMenu\">\n      <ListGroup>{list_categories}</ListGroup>\n    </aside>\n  );\n};\n\nSideMenu.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired,\n\n};\nexport default SideMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nconst Parameters = ({ name, explanation, example }) => (\n    <div>\n      <h4 className=\"article-parameters\">{name}</h4>\n      <p>{explanation}</p>\n      <pre>\n        <SyntaxHighlighter language=\"javascript\">{example}</SyntaxHighlighter>\n      </pre>\n    </div>);\n\nParameters.propTypes = {\n  name: PropTypes.string,\n  explanation: PropTypes.string,\n  example: PropTypes.string,\n};\nexport default Parameters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Button } from 'reactstrap';\nimport Parameters from './Parameters';\n\nconst Article = ({\n  title, description, example, syntax,\n}) => {\n  const parameters = Object.values(syntax.parameters).map(parameter => (\n    <Parameters\n      key={parameter.id}\n      name={parameter.name}\n      explanation={parameter.explanation}\n      example={parameter.example}\n    />\n  ));\n\n  return (\n    <article className=\"article\">\n      <h2 className=\"article-title\">{title}</h2>\n      <p>{description}</p>\n      <pre>\n        <SyntaxHighlighter language=\"javascript\">{example}</SyntaxHighlighter>\n      </pre>\n      <div>\n        <h3 className=\"article-subtitle\">Parameters:</h3>\n        {parameters}\n        <h3 className=\"article-subtitle\">Return Value:</h3>\n        <p>{syntax.return}</p>\n        <Button outline color=\"link\"><a className=\"learnMore-button\" href={syntax.link} target=\"_blank\" rel=\"noopener noreferrer\">Learn More</a></Button>{' '}\n\n      </div>\n    </article>\n  );\n};\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  example: PropTypes.string.isRequired,\n\n};\nexport default Article;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MainHeader = ({ section }) => (\n  <div className=\"mainHeader-style\">\n    <h2 className=\"mainHeader\">{section}</h2>\n  </div>\n);\n\nMainHeader.propTypes = {\n  section: PropTypes.string.isRequired,\n};\nexport default MainHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Article from './Article';\nimport MainHeader from './MainHeader';\n// import { github } from 'react-syntax-highlighter/styles/hljs';\n\nconst Main = ({ articles, section }) => {\n  const article = Object.values(articles).map(article => (\n  <Article\n\t\ttitle={article.title}\n\t\tkey={article.id}\n\t\tdescription={article.description}\n\t\texample={article.example}\n\t\tsyntax={article.syntax}\n\t\t/>\n  ));\n\n  return (\n\t\t<main id=\"content\">\n\t\t\t<MainHeader section={section} />\n\t\t\t{article}\n\t\t</main>\n  );\n};\n\nMain.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  section: PropTypes.string.isRequired,\n};\n\nexport default Main;\n","// Import Section\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport data from './data/data.json';\nimport Header from './components/Header';\nimport SideMenu from './components/SideMenu';\nimport Main from './components/Main';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // {data} is the json object that will give all the information to the app.\n    // {active_category_id} will identify the section the user is visiting based on the key of the {data} given.\n    // Objects in the json file start at \"1\". -1 in active category means there is no active category.\n    this.state = {\n      data,\n      active_category_id: -1,\n      active_article_id: -1,\n    };\n    this.updateActiveCategory = this.updateActiveCategory.bind(this);\n  }\n  // It returns an array of all the articles found in {data} json.\n\n  getAllArticles() {\n    const articles = Object.values(this.state.data).map(object => (\n      object.articles\n    ));\n    return articles.reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n  }\n\n  // Using the SideMenu or the Navbar buttons, update the {active_category_id}\n\n  updateActiveCategory(category_id, article_id) {\n    this.setState({\n      active_category_id: category_id,\n      active_article_id: article_id,\n    });\n  }\n\n  render() {\n    // Destructuring\n    const { data, active_category_id, active_article_id } = this.state;\n\n    // Create an array of the {categories} thay will show in the <Navbar> and the <Sidemenu>.\n    const categoriesName = Object.values(data).map(object => (\n      { id: object.id, category: object.category, articles: object.articles}));\n\n    // Based on the category that has been selected in the menus, render a {sectionTitle} in <MainHeader>.\n    const sectionTitle = (active_category_id > 0) ? data[active_category_id].category : \"Articles\";\n\n    // Create an array of {articles} to show in the main component based on the active state of the category..\n    const articles = (active_category_id === -1) ? this.getAllArticles() :\n      (active_article_id === -1) ? data[active_category_id].articles : data[active_category_id].articles.filter(article => article.id === active_article_id);\n\n    return (\n      <div>\n        <Header categories={categoriesName} onChange={this.updateActiveCategory} />\n        <div className=\"main-wrapper\">\n          <SideMenu categories={categoriesName} onChange={this.updateActiveCategory} />\n          <Main articles={articles} section={sectionTitle} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}